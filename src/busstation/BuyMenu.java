package busstation;

import static busstation.LogIn.con;
import java.sql.*;
import java.util.logging.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class BuyMenu extends javax.swing.JFrame {

    boolean prueba = true, type = false;
    int IDF = 0;

    public BuyMenu() {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        SetBuyMenu();
        BuyThread FT = new BuyThread();
        Thread T = new Thread(FT);
        T.start();
        type = MainMenu.type;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Logo = new javax.swing.JLabel();
        TextLabel1 = new javax.swing.JLabel();
        TextLabel2 = new javax.swing.JLabel();
        TextLabel3 = new javax.swing.JLabel();
        TextLabel4 = new javax.swing.JLabel();
        MoneyTextField = new javax.swing.JTextField();
        TotalTextField = new javax.swing.JTextField();
        MenuButton = new javax.swing.JButton();
        BuyButton = new javax.swing.JButton();
        AmountSpinner = new javax.swing.JSpinner();
        BuyScrollPane = new javax.swing.JScrollPane();
        BuyTable = new javax.swing.JTable();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BusStation Pátzcuaro: Menu de Compra");
        setMaximumSize(new java.awt.Dimension(900, 500));
        setMinimumSize(new java.awt.Dimension(900, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo480.jpg"))); // NOI18N
        getContentPane().add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 60));

        TextLabel1.setFont(new java.awt.Font("HelvLight", 1, 14)); // NOI18N
        TextLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextLabel1.setText("Selecciona aqui los boletos que quieres comprar");
        getContentPane().add(TextLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 880, 30));

        TextLabel2.setFont(new java.awt.Font("HelvLight", 1, 14)); // NOI18N
        TextLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextLabel2.setText("Boletos:");
        getContentPane().add(TextLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 410, 100, 30));

        TextLabel3.setFont(new java.awt.Font("HelvLight", 1, 14)); // NOI18N
        TextLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextLabel3.setText("Efectivo:");
        getContentPane().add(TextLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, 90, 30));

        TextLabel4.setFont(new java.awt.Font("HelvLight", 1, 14)); // NOI18N
        TextLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextLabel4.setText("Total:");
        getContentPane().add(TextLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 90, 30));

        MoneyTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MoneyTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MoneyTextField.setText("0");
        MoneyTextField.setToolTipText("Introduce aquí el efectivo del que dispones.");
        MoneyTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        getContentPane().add(MoneyTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 440, 90, 30));

        TotalTextField.setEditable(false);
        TotalTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TotalTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TotalTextField.setText("0");
        TotalTextField.setToolTipText("Aquí aparece el total de los boletos que quieres comprar. ");
        TotalTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        getContentPane().add(TotalTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 440, 90, 30));

        MenuButton.setBackground(new java.awt.Color(255, 153, 153));
        MenuButton.setFont(new java.awt.Font("HelvLight", 1, 14)); // NOI18N
        MenuButton.setText("VOLVER AL MENU");
        MenuButton.setToolTipText("Click aquí para volver al menu principal.");
        MenuButton.setBorder(null);
        MenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MenuButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 230, 50));

        BuyButton.setBackground(new java.awt.Color(102, 255, 102));
        BuyButton.setFont(new java.awt.Font("HelvLight", 1, 14)); // NOI18N
        BuyButton.setText("REALIZAR PAGO");
        BuyButton.setToolTipText("Click aquí para finalizar la compra de boletos.");
        BuyButton.setBorder(null);
        BuyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BuyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 420, 230, 50));

        AmountSpinner.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AmountSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));
        AmountSpinner.setToolTipText("Selecciona aquí la cantidad de boletos que quieres sobre un viaje.");
        AmountSpinner.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        getContentPane().add(AmountSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 440, 100, 30));

        BuyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DESTINO", "AUTOBUS", "PLACAS", "CHOFER", "COMPAÑIA", "ASIENTOS LIBRES", "PRECIO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BuyTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        BuyTable.getTableHeader().setReorderingAllowed(false);
        BuyScrollPane.setViewportView(BuyTable);
        if (BuyTable.getColumnModel().getColumnCount() > 0) {
            BuyTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            BuyTable.getColumnModel().getColumn(1).setPreferredWidth(160);
            BuyTable.getColumnModel().getColumn(2).setPreferredWidth(160);
            BuyTable.getColumnModel().getColumn(3).setPreferredWidth(88);
            BuyTable.getColumnModel().getColumn(4).setPreferredWidth(110);
            BuyTable.getColumnModel().getColumn(5).setPreferredWidth(150);
            BuyTable.getColumnModel().getColumn(6).setPreferredWidth(118);
            BuyTable.getColumnModel().getColumn(7).setPreferredWidth(50);
        }

        getContentPane().add(BuyScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 880, 300));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/WhiteSolidBackground.jpg"))); // NOI18N
        Background.setMaximumSize(new java.awt.Dimension(900, 500));
        Background.setMinimumSize(new java.awt.Dimension(900, 500));
        Background.setPreferredSize(new java.awt.Dimension(900, 500));
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
        this.dispose();
        MainMenu MMB = new MainMenu();
    }//GEN-LAST:event_MenuButtonActionPerformed

    private void BuyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyButtonActionPerformed
        DefaultTableModel table3 = (DefaultTableModel) BuyTable.getModel();
        int i = BuyTable.getSelectedRow();
        double total = Double.parseDouble(TotalTextField.getText());
        int cant = (Integer) AmountSpinner.getValue();
        int cantR = 1, IdTicket1 = 0, seatf;
        double cambio;
        String hour = "", date = "";

        if (total > Double.parseDouble(MoneyTextField.getText())) {
            JOptionPane.showMessageDialog(null, "No ha pagado lo suficiente.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (total == 0.0 || i == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un viaje para comprar boletos.", "Por favor", JOptionPane.ERROR_MESSAGE);
        } else if (type == true) {
            JOptionPane.showMessageDialog(null, "Como administrador no puedes comprar boletos.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {    
            int ID = Integer.parseInt(String.valueOf(table3.getValueAt(i, 0)));
            int seat = Integer.parseInt(String.valueOf(table3.getValueAt(i, 6)));
            String destiny = String.valueOf(table3.getValueAt(i, 1));
            cambio = Double.parseDouble(MoneyTextField.getText()) - total;
            IDF = MainMenu.id;

            if (cant > seat) {
                JOptionPane.showMessageDialog(null, "Esta revasando el maximo de asientos\nposibles para este viaje.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {

                try {
                    this.dispose();
                    MainMenu MMF = new MainMenu();

                    Statement st = con.createStatement();

                    st.executeUpdate("UPDATE travel SET `FreeSeats` = `FreeSeats`-" + cant + " WHERE (`IdTravel` = '" + ID + "');");

                    while (cantR <= cant) {
                        st.executeUpdate("INSERT INTO ticket (`IdTravel`,`DepartureTime`, `DepartureDate`, `Client`) VALUES ('" + ID + "', DATE_ADD(curTime(),INTERVAL 90 MINUTE), CURDATE(), '" + IDF + "');");
                        ResultSet rs4 = st.executeQuery("SELECT * FROM ticket ORDER BY IdTicket DESC LIMIT 1;");
                        while (rs4.next()) {
                            String IdTicket = rs4.getString("IdTicket");
                            IdTicket1 = Integer.parseInt(IdTicket);
                            hour = rs4.getString("DepartureTime");
                            date = rs4.getString("DepartureDate");
                        }
                        rs4.close();
                        seatf = seat;
                        seatf = seat - cantR;
                        Tickets.SetValues(IdTicket1, seatf+1, destiny, hour, date);
                        Tickets TK = new Tickets();
                        cantR++;
                    }

                    JOptionPane.showMessageDialog(null, "¡MUCHAS GRACIAS POR SU PREFERENCIA!\n"
                            + "SE HA REALIZADO LA COMPRA CON EXITO.\n"
                            + "------------------------------------------------------------\n"
                            + "SU CAMBIO: " + cambio + "$ MX", "¡BUEN VIAJE!", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException ex) {
                    Logger.getLogger(BuyMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_BuyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuyMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuyMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuyMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuyMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner AmountSpinner;
    private javax.swing.JLabel Background;
    private javax.swing.JButton BuyButton;
    private javax.swing.JScrollPane BuyScrollPane;
    private javax.swing.JTable BuyTable;
    private javax.swing.JLabel Logo;
    private javax.swing.JButton MenuButton;
    private javax.swing.JTextField MoneyTextField;
    private javax.swing.JLabel TextLabel1;
    private javax.swing.JLabel TextLabel2;
    private javax.swing.JLabel TextLabel3;
    private javax.swing.JLabel TextLabel4;
    private javax.swing.JTextField TotalTextField;
    // End of variables declaration//GEN-END:variables

    public void SetBuyMenu() {
        try {
            Statement st = con.createStatement();
            ResultSet rs1 = st.executeQuery("SELECT * FROM travel T JOIN bus B ON T.bus = B.IdBus JOIN model M ON M.IdModel = B.Model JOIN driver D ON B.Driver = D.IdDriver JOIN company C ON B.PropertyOf = C.IdCompany;");

            DefaultTableModel table1 = (DefaultTableModel) BuyTable.getModel();

            while (rs1.next()) {
                String idviaje = rs1.getString("T.IdTravel");
                String destiny = rs1.getString("T.Destination");
                String buss1 = rs1.getString("M.Brand");
                String buss2 = rs1.getString("M.Name");
                String bussF = buss1 + " " + buss2;
                String enroll = rs1.getString("B.Enrollment");
                String name = rs1.getString("D.Name");
                String lname = rs1.getString("D.LastName");
                String nameF = name + " " + lname;
                String company = rs1.getString("C.Name");
                String free = rs1.getString("T.FreeSeats");
                String price = rs1.getString("T.Price");

                String Row[] = new String[]{idviaje, destiny, bussF, enroll, nameF, company, free, price};
                table1.addRow(Row);
            }
            rs1.close();

        } catch (SQLException ex) {
            Logger.getLogger(BuyMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    class BuyThread implements Runnable {

        @Override
        public void run() {
            while (prueba == true) {
                double total = 0.0;

                try {
                    DefaultTableModel table2 = (DefaultTableModel) BuyTable.getModel();
                    int i = BuyTable.getSelectedRow();
                    if (i >= 0) {
                        int cant = (Integer) AmountSpinner.getValue();
                        int disp = Integer.parseInt(String.valueOf(table2.getValueAt(i, 6)));
                        double cost = Double.parseDouble(String.valueOf(table2.getValueAt(i, 7)));

                        if (cant >= disp) {
                            int cant1 = Integer.parseInt(String.valueOf(table2.getValueAt(i, 6)));
                            total = cost * cant1;
                            TotalTextField.setText(total + "");
                        } else {
                            total = cost * cant;
                            TotalTextField.setText(total + "");
                        }
                    }
                    Thread.sleep(100);

                } catch (InterruptedException ex) {
                    Logger.getLogger(BuyThread.class.getName()).log(Level.SEVERE, null, ex);

                }
            }
        }
    }

}
